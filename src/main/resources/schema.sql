DROP TABLE IF EXISTS public.BOOKING;
DROP TABLE IF EXISTS public.ITEM;
DROP TABLE IF EXISTS public.USERS;

DROP SEQUENCE IF EXISTS USER_ID_SEQ;
CREATE SEQUENCE IF NOT EXISTS USER_ID_SEQ START 1;
DROP SEQUENCE IF EXISTS ITEM_ID_SEQ;
CREATE SEQUENCE IF NOT EXISTS ITEM_ID_SEQ START 1;
DROP SEQUENCE IF EXISTS BOOKING_ID_SEQ;
CREATE SEQUENCE IF NOT EXISTS BOOKING_ID_SEQ START 1;

CREATE TABLE IF NOT EXISTS public.USERS
(
    ID bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    NAME character varying(128) COLLATE pg_catalog."default",
    EMAIL character varying(128) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT USERS_pkey PRIMARY KEY (ID),
    CONSTRAINT EMAIL_UNIQUE UNIQUE (EMAIL)
);
CREATE TABLE IF NOT EXISTS public.ITEM
(
    ID bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    NAME character varying(256) COLLATE pg_catalog."default",
    DESCRIPTION character varying(512) COLLATE pg_catalog."default",
    OWNER_ID bigint NOT NULL,
    LAST_BOOKING_ID bigint,
    NEXT_BOOKING_ID bigint,
    AVAILABLE boolean NOT NULL,
    CONSTRAINT ITEM_pkey PRIMARY KEY (ID),
    CONSTRAINT ITEM_USERS_FK FOREIGN KEY (OWNER_ID)
        REFERENCES public.USERS (ID) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
);
CREATE TABLE IF NOT EXISTS public.booking
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 ),
    start_date timestamp without time zone,
    end_date timestamp without time zone,
    item_id bigint NOT NULL,
    booker_id bigint NOT NULL,
    status character varying(64) NOT NULL,
    PRIMARY KEY (id),
    CONSTRAINT item_fk FOREIGN KEY (item_id)
        REFERENCES public.item (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID,
    CONSTRAINT user_fk FOREIGN KEY (booker_id)
        REFERENCES public.users (id) MATCH SIMPLE
        ON UPDATE CASCADE
        ON DELETE CASCADE
        NOT VALID
);